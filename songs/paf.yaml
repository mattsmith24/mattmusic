include:
patches:
  # phase aligned formant
  # params:
  # INPUT(0): fundamental_freq
  # INPUT(1): carrier_freq
  # INPUT(2): modulation_index
  # INPUT(3): duration
  - name: paf
    root: paf
    sounds:
      - name: sweep_ramp
        sound_type: ramp
        params:
          - EXPR(1.0 / INPUT(0))
          - "1.0"
          - INPUT(3)
      - name: offset
        sound_type: dc
        params:
          - "-0.5"
          - INPUT(3)
      - name: sweep
        sound_type: mix
        params:
          - sweep_ramp
          - offset
      - name: modulation_wave
        sound_type: sine
        params:
          - EXPR(INPUT(0) / 2.0)
          - "1.0"
          - INPUT(3)
      - name: modulation_index
        sound_type: multiply
        params:
          - 0.0 modulation_wave
          - dc INPUT(2) INPUT(3) # >= 2 * pi
      - name: modulator1
        sound_type: cauchy_transfer
        params:
          - modulation_index
      - name: modulator
        sound_type: export_wav
        params:
          - tmp/paf_modulator.wav
          - modulator1
      # For a carrier at 3.7 x 440Hz, we can fade between two close harmonics
      # k and q are the integer and fractional part of wc/w
      # ie 3 and 0.7
      - name: kwn
        sound_type: multiply
        params:
          - 0.0 sweep
          - dc EXPR(floor(INPUT(1) / INPUT(0))) INPUT(3) # k
      # cos(k*w*n)
      # Note - cos_transfer multiplies input by 2*pi
      - name: cos_kwn_input
        sound_type: cos_transfer
        params:
          - kwn
      - name: cos_kwn
        sound_type: export_wav
        params:
          - tmp/paf_cos_kwn.wav
          - cos_kwn_input
      # p * cos(k*w*n)
      - name: p_cos_kwn
        sound_type: multiply
        params:
          - 0.0 cos_kwn
          - dc EXPR(1.0 - (INPUT(1) / INPUT(0) - floor(INPUT(1) / INPUT(0)))) INPUT(3)
      # (k + 1) * w *n
      - name: k1wn
        sound_type: multiply
        params:
          - 0.0 sweep
          - dc EXPR(floor(INPUT(1) / INPUT(0)) + 1.0) INPUT(3) # (k + 1)
      # cos((k + 1)*w*n)
      - name: cos_k1wn
        sound_type: cos_transfer
        params:
          - k1wn
      # q * cos((k + 1)*w*n)
      - name: q_cos_k1wn
        sound_type: multiply
        params:
          - 0.0 cos_k1wn
          - dc EXPR(INPUT(1) / INPUT(0) - floor(INPUT(1) / INPUT(0))) INPUT(3)
      # p * cos(k*w*n) + q * cos((k + 1)*w*n)
      - name: carrier1
        sound_type: mix
        params:
          - p_cos_kwn
          - q_cos_k1wn
      - name: carrier
        sound_type: export_wav
        params:
          - tmp/paf_carrier.wav
          - carrier1
      - name: modulate
        sound_type: multiply
        params:
          - 0.0 carrier
          - 0.0 modulator
      - name: paf
        sound_type: export_wav
        params:
          - tmp/paf.wav
          - modulate
sounds:
  - name: paf_out
    sound_type: patch paf
    params:
      - "440.0" # fundamental_freq
      - "1200.0" # carrier_freq
      - "2.0" # modulation_index
      - "5.0" # duration
root: paf_out
